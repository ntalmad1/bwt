package com.talmadge.bwt.core.client.ui.widget.table;

import com.google.gwt.core.client.JavaScriptObject;
import com.google.gwt.core.client.JsArray;

/**
 * 
 * @author Noah
 *
 */
class JQueryBridge<T extends JavaScriptObject>
{
	/**
	 */
	private BwtTableCell<T> table;
	
	
	
	/**
	 * Constructor
	 *  
	 * @param bwtTableCell
	 */
	protected JQueryBridge (BwtTableCell<T> table)
	{
		this.table = table;
	}


	/**
	 * 
	 */
	public void clear ()
	{
		this._clear(this.table.getId());		
	}
	
	
	/**
	 * 
	 */
	public void draw ()
	{
		this._draw(this.table.getId());		
	}
	
	
	/**
	 * 
	 */
	public void exportCutomHandlers ()
	{
		this._exportCustomHandlers(this.table.getId());		
	}


	/**
	 * 
	 * @param data JsArray<T>
	 */
	public void setData (JsArray<T> data)
	{
		this._setData(this.table.getId(), data);
	}


	/**
	 * 
	 * @param id String
	 */
	private native void _clear (String id) /*-{
		
		var datatable = $wnd.$("#" + id).dataTable().api();
		
		datatable.clear();		
		
	}-*/;
	
	
	/**
	 * 
	 * @param id String
	 */
	private native void _draw (String id) /*-{
		
		var datatable = $wnd.$("#" + id).dataTable().api();
		
		datatable.draw();		
		
	}-*/;
	
	
	/**
	 * 
	 * @param id String
	 */
	private native void _exportCustomHandlers (String id) /*-{
		
		var datatable = $wnd.$("#" + id).dataTable().api();
		
		// e - jQuery event object 
		// dt - DataTables API instance
		// type - Item type that will be selected. This can be rows, columns or cells.
		// cell - A cell() result for the cell that the event was activated by.
		// originalEvent The original event that was generated by the browser when the end user activated the selection listening event.
		datatable.on( 'user-select', function(e, dt, type, cell, originalEvent) {
			
			if ( originalEvent.target.parentNode.nodeName.toLowerCase() === 'div' 
			  ||  originalEvent.target.nodeName.toLowerCase() === 'button' 
			  ||  originalEvent.target.nodeName.toLowerCase() === 'span' ) {
        		e.preventDefault();
        		
        		var rowIndex = cell.index().row;
        		
        		var selectedRows = dt.rows({selected: true});
        		
        		var selected = false;
        		
        		for (var i = 0; i < selectedRows[0].length; ++i)
        		{
        			if (selectedRows[0][i] == rowIndex)
        			{
        				selected = true;
        				break;
        			}
        		} 
        		
        		if (!selected)
        		{
        			dt.row(rowIndex).select();
        		}
        	}
    	});	
		
	}-*/;
	
	
	/**
	 * 
	 * @param data JsArray<T>
	 */
	private native void _setData (String id, JsArray<T> data) /*-{
		
		var datatable = $wnd.$("#" + id).dataTable().api();
		
		datatable.rows.add(data);		
		
	}-*/;
	
}
